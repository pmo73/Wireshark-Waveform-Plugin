name: Publish Docker image

on:
  push:
    branches: ['main']
    paths: ['scripts/**']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  push_to_registry:
    strategy:
      fail-fast: false
      matrix:
        dockerfile:
          - Dockerfile-wireshark-ubuntu-noble
          - Dockerfile-wireshark-ubuntu-jammy
          - Dockerfile-wireshark-ubuntu-focal
          - Dockerfile-wireshark-centos
          - Dockerfile-wireshark-archlinux
          - Dockerfile-wireshark-opensuse-tumbleweed
        include:
          - dockerfile: Dockerfile-wireshark-ubuntu-noble
            tags: 'bjoern97/wireshark-waveform-plugin:ubuntu-noble, bjoern97/wireshark-waveform-plugin:latest'
          - dockerfile: Dockerfile-wireshark-ubuntu-jammy
            tags: 'bjoern97/wireshark-waveform-plugin:ubuntu-jammy'
          - dockerfile: Dockerfile-wireshark-ubuntu-focal
            tags: 'bjoern97/wireshark-waveform-plugin:ubuntu-focal'
          - dockerfile: Dockerfile-wireshark-centos
            tags: 'bjoern97/wireshark-waveform-plugin:centos'
          - dockerfile: Dockerfile-wireshark-archlinux
            tags: 'bjoern97/wireshark-waveform-plugin:archlinux'
          - dockerfile: Dockerfile-wireshark-opensuse-tumbleweed
            tags: 'bjoern97/wireshark-waveform-plugin:tumbleweed'
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: bjoern97/wireshark-waveform-plugin

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./scripts
          file: ./scripts/${{ matrix.dockerfile }}
          push: true
          tags: ${{ matrix.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      #- name: Generate artifact attestation
      #  uses: actions/attest-build-provenance@v1
      #  with:
      #    subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #    subject-digest: ${{ steps.push.outputs.digest }}
      #    push-to-registry: true
